# Residual norms.
ds = norm(x = s, type = "F")
dr = norm(x = r, type = "F")
# Compute absolute and relative tolerances.
ep = tol * (sqrt(p) + max(norm(x), norm(y)) )
es = tol * (sqrt(p) + norm(y))
# Check for convergence.
if(dr < ep && ds < es) {
if (quiet == FALSE) {
print('DONEZO! Converged.')
print(c(its, dr, ep, ds, es))
}
# Output optimal solution.
return(list(x=x, y=y, z=z, its=its))
break  # STOP. Converged.
}
# Save previous iterate.
yold <- y
# Update iteration count.
its <- iter
y <- vecshrink(v=beta*Dx(Nx) + z, a=gamma)
# Normalize.
tmp <- max(0, norm(x=y, type="F") - beta)
y <- y/(beta + tmp)
print(norm(y-yold))
xold <- x
# Update right-hand side.
b <- t(N) %*% Dtx(beta*y - z)
# Update using the SMW identity.
xtmp <- forwardsolve(l = t(V), x = b)
xtmp <- backsolve(r = V, x = xtmp)
x <- 1/beta * b + 1/beta^2 * t(RN) %*% xtmp
print(norm(x - xold))
# Calculate primal feasibility residual.
Nx <- N %*% x
r <- Dx(Nx) - y
# Ascent step.
z <- z + beta * r
# Dual residual.
s <- beta * (y - yold)
# Residual norms.
ds = norm(x = s, type = "F")
dr = norm(x = r, type = "F")
# Compute absolute and relative tolerances.
ep = tol * (sqrt(p) + max(norm(x), norm(y)) )
es = tol * (sqrt(p) + norm(y))
# Save previous iterate.
yold <- y
# Update iteration count.
its <- iter
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# Update y using soft-thresholding.
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
if (type == "ball"){
print('Updating y using ball constraint')
# Apply vecshrink.
print(c(length(Dx(Nx)), length(z)))
y <- vecshrink(v=beta*Dx(Nx) + z, a=gamma)
# Normalize.
tmp <- max(0, norm(x=y, type="F") - beta)
y <- y/(beta + tmp)
print(norm(y-yold))
}
type = "ball"
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# Update y using soft-thresholding.
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
if (type == "ball"){
print('Updating y using ball constraint')
# Apply vecshrink.
print(c(length(Dx(Nx)), length(z)))
y <- vecshrink(v=beta*Dx(Nx) + z, a=gamma)
# Normalize.
tmp <- max(0, norm(x=y, type="F") - beta)
y <- y/(beta + tmp)
print(norm(y-yold))
}
xold <- x
# Update right-hand side.
b <- t(N) %*% Dtx(beta*y - z)
# Update using the SMW identity.
xtmp <- forwardsolve(l = t(V), x = b)
xtmp <- backsolve(r = V, x = xtmp)
x <- 1/beta * b + 1/beta^2 * t(RN) %*% xtmp
print(norm(x - xold))
# Calculate primal feasibility residual.
Nx <- N %*% x
r <- Dx(Nx) - y
# Ascent step.
z <- z + beta * r
# Dual residual.
s <- beta * (y - yold)
# Residual norms.
ds = norm(x = s, type = "F")
dr = norm(x = r, type = "F")
# Compute absolute and relative tolerances.
ep = tol * (sqrt(p) + max(norm(x), norm(y)) )
es = tol * (sqrt(p) + norm(y))
# Save previous iterate.
yold <- y
# Update iteration count.
its <- iter
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# Update y using soft-thresholding.
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
if (type == "ball"){
print('Updating y using ball constraint')
# Apply vecshrink.
print(c(length(Dx(Nx)), length(z)))
y <- vecshrink(v=beta*Dx(Nx) + z, a=gamma)
# Normalize.
tmp <- max(0, norm(x=y, type="F") - beta)
y <- y/(beta + tmp)
print(norm(y-yold))
}
xold <- x
# Update right-hand side.
b <- t(N) %*% Dtx(beta*y - z)
# Update using the SMW identity.
xtmp <- forwardsolve(l = t(V), x = b)
xtmp <- backsolve(r = V, x = xtmp)
x <- 1/beta * b + 1/beta^2 * t(RN) %*% xtmp
print(norm(x - xold))
# Calculate primal feasibility residual.
Nx <- N %*% x
r <- Dx(Nx) - y
# Ascent step.
z <- z + beta * r
# Dual residual.
s <- beta * (y - yold)
# Residual norms.
ds = norm(x = s, type = "F")
dr = norm(x = r, type = "F")
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=3, type ="ball")
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=1000, type ="ball")
plot(cmns$DVs, type="l")
source('C:/Users/bpames/github/FZVD/R/penzda.R')
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=1000, type ="ball")
source('C:/Users/bpames/github/FZVD/R/penzda.R')
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=1000, type ="ball")
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=2, type ="ball")
norm(as.matrix(DVs[,i]))
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=2, type ="ball")
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=2, type ="ball")
cmns$DVs
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=20, type ="ball")
source('C:/Users/bpames/github/FZVD/R/penzda.R')
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=20, type ="ball")
plot(cmns$DVs, type="l")
source('C:/Users/bpames/github/FZVD/R/penzda.R')
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=20, type ="ball")
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=20, tol = 1e-3, type ="ball")
plot(cmns$DVs, type="l")
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=2, tol = 1e-3, type ="ball")
source('C:/Users/bpames/github/FZVD/R/penzda.R')
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=2, tol = 1e-3, type ="ball")
source('C:/Users/bpames/github/FZVD/R/penzda.R')
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=2, tol = 1e-3, type ="ball")
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=2, tol = 1e-3, type ="ball")
cmns$x
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=1, tol = 1e-3, type ="ball")
cmns$x
source('C:/Users/bpames/github/FZVD/R/penzda.R')
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=1, tol = 1e-3, type ="ball")
plot(cmns$DVs, type="l")
cmns$DVs
source('C:/Users/bpames/github/FZVD/R/penzda.R')
View(Dtx)
source('C:/Users/bpames/github/FZVD/R/penzda.R')
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=1, tol = 1e-3, type ="ball")
plot(cmns$DVs, type="l")
cmns$x
r <- rbind(c(1,2,3),
c(0,1,1),
c(0,0,2))
r
y <- backsolve(r, x <- c(8,4,2)) )
y <- backsolve(r, x <- c(8,4,2))
y
t(y)
y
as.matrix(y)
r %*% y
backsolve(r, x, transpose = TRUE)
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=1, tol = 1e-3, type ="ball")
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=1, tol = 1e-3, type ="ball")
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=1, tol = 1e-3, type ="ball")
cmns$x
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=1, tol = 1e-3, type ="ball")
cmns$b
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=1, tol = 1e-3, type ="ball")
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=1, tol = 1e-3, type ="ball")
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=1, tol = 1e-3, type ="ball")
source('C:/Users/bpames/github/FZVD/R/penzda.R')
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=1, tol = 1e-3, type ="ball")
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=1, tol = 1e-3, type ="ball")
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=1, tol = 1e-3, type ="ball")
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=1, tol = 1e-3, type ="ball")
source('C:/Users/bpames/github/FZVD/R/penzda.R')
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=1, tol = 1e-3, type ="ball")
View(cmns)
cmns(M)
cmns$M
cmns[["M"]]
cmns$M[1:5,1:5]
cmns$N[1:5,1:5]
t(N)%*%N
heatmap(t(N)%*%N)
norm(t(N)%*%N - diag(115))
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=15, tol = 1e-3, type ="ball")
plot(cmns$DVs)
plot(cmns$DVs, type="l")
cmns$DVs
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=15, tol = 1e-3, type ="ball")
cmns$DVs
plot(cmns$DVs, type="l")
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
r <- rbind(c(1,2,3),
c(0,1,1),
c(0,0,2))
prds <- max.col(r)
r <- rbind(c(1,2,3),
c(0,2,1),
c(0,0,2))
prds <- max.col(r)
min.col(r)
max.col(-r)
which.min(r)
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
penstats <- predict(obj = cmns, Xtest = Xtest, Ytest = Ytest)
source('C:/Users/bpames/github/FZVD/R/penzda.R')
penstats <- predict(obj = cmns, Xtest = Xtest, Ytest = Ytest)
source('C:/Users/bpames/github/FZVD/R/penzda.R')
penstats <- predict(obj = cmns, Xtest = Xtest, Ytest = Ytest)
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
penstats <- predict(obj = cmns, Xtest = Xtest, Ytest = Ytest)
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
which.max(c(2,2,1))
which.max(c(2,2,1))
which.max(c(2,2,1))
which.max(c(2,2,1))
which.max(c(2,2,1))
presidents
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=15, tol = 1e-3, type ="sphere")
cmns$DVs
plot(cmns$DVs, type="l")
penstats <- predict(obj = cmns, Xtest = Xtest, Ytest = Ytest)
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
library(readr)
train <- read_csv("data/OOtrain.csv", col_names = FALSE)
View(train)
library(readr)
test <- read_csv("data/OOtest.csv")
View(test)
library(readr)
OOtest <- read_csv("data/OOtest.csv", col_names = FALSE)
View(OOtest)
test <- OOtest
clear(OOtest)
remove(OOtest)
View(test)
# Make ASDA Input.
n <- dim(train)[1]
p <- dim(train)[2] - 1
Xtrain <- as.matrix(train[, 2:(p+1)])
Ytrain <- train$X1
Xtest <- as.matrix(test[, 2:(p+1)])
Ytest <- test$X1
ntest <- dim(test)[1]
save.image("C:/Users/bpames/github/FZVD/R/data/OliveOil.RData")
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# Call ASDA.
library(accSDA)
res <- ASDA(Xt = Xtrain, Yt = Ytrain)
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=15, tol = 1e-3, type ="sphere")
#++++++++++++++++++++++++++++++++++++++++++++++++++++
# Test penzda.
library(MASS)
library(rARPACK)
source('C:/Users/bpames/github/FZVD/R/penzda.R')
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=15, tol = 1e-3, type ="sphere")
nlevels(Ytrain)
Ytrain
nlevels(as.factor(Ytrain))
levels(as.factor(Ytrain))
Ytrain <- as.factor(train$X1)
Ytest <- as.factor(test$X1)
save.image("C:/Users/bpames/github/FZVD/R/data/OliveOil.RData")
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=15, tol = 1e-3, type ="sphere")
source('C:/Users/bpames/github/FZVD/R/penzda.R')
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=15, tol = 1e-3, type ="sphere")
source('C:/Users/bpames/github/FZVD/R/penzda.R')
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=15, tol = 1e-3, type ="sphere")
source('C:/Users/bpames/github/FZVD/R/penzda.R')
print(dim(N1))
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=15, tol = 1e-3, type ="sphere")
cmns$DVs
plot(cmns$DVs, type="l")
penstats <- predict(obj = cmns, Xtest = Xtest, Ytest = Ytest)
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=50, tol = 1e-3, type ="sphere")
penstats <- predict(obj = cmns, Xtest = Xtest, Ytest = Ytest)
cbind(penstats$preds, Ytest)
cbind(penstats$preds, Ytest, penstats$dist)
plot(cmns$DVs[,1], type="l")
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=50, tol = 1e-3, type ="ball")
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=50, tol = 1e-3, type ="ball")
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
load("C:/Users/bpames/github/FZVD/R/data/ECG.RData")
source('C:/Users/bpames/github/FZVD/R/penzda.R')
#++++++++++++++++++++++++++++++++++++++++++++++++++++
# Test penzda.
library(MASS)
library(rARPACK)
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=50, tol = 1e-3, type ="ball")
cmns$DVs
plot(cmns$DVs[,1], type="l")
penstats <- predict(obj = cmns, Xtest = Xtest, Ytest = Ytest)
penstats
penstats$mc
load("C:/Users/bpames/github/FZVD/R/data/OliveOil.RData")
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=50, tol = 1e-3, type ="ball")
#++++++++++++++++++++++++++++++++++++++++++++++++++++
# Test penzda.
library(MASS)
library(rARPACK)
#++++++++++++++++++++++++++++++++++++++++++++++++++++
# Test penzda.
library(MASS)
library(rARPACK)
.libPaths()
.libPaths('C:/Users/bpames/R')
.libPaths()
#++++++++++++++++++++++++++++++++++++++++++++++++++++
# Test penzda.
library(MASS)
library(rARPACK)
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=50, tol = 1e-3, type ="ball")
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=50, tol = 1e-3, type ="ball")
source('C:/Users/bpames/github/FZVD/R/penzda.R')
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=50, tol = 1e-3, type ="ball")
plot(cmns$DVs[,1], type="l")
penstats <- predict(obj = cmns, Xtest = Xtest, Ytest = Ytest)
penstats$mc
source('C:/Users/bpames/github/FZVD/R/penzda.R')
cmns2 <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=50, tol = 1e-3, type ="ball")
cmns2$DVs
plot(cmns$DVs[,1], type="l")
penstats2 <- predict(obj = cmns, Xtest = Xtest, Ytest = Ytest)
penstats2$mc
plot(cmns2$DVs[,1], type="l")
penstats2 <- predict(obj = cmns2, Xtest = Xtest, Ytest = Ytest)
penstats2$mc
load("C:/Users/bpames/github/FZVD/R/data/ECG.RData")
source('C:/Users/bpames/github/FZVD/R/penzda.R')
#++++++++++++++++++++++++++++++++++++++++++++++++++++
# Test penzda.
library(MASS)
library(rARPACK)
cmns2 <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=50, tol = 1e-3, type ="ball")
cmns2$DVs
plot(cmns2$DVs[,1], type="l")
penstats2 <- predict(obj = cmns2, Xtest = Xtest, Ytest = Ytest)
penstats2$mc
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=50, tol = 1e-3, type ="ball")
source('C:/Users/bpames/github/FZVD/R/penzda.R')
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=50, tol = 1e-3, type ="ball")
source('C:/Users/bpames/github/FZVD/R/penzda.R')
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=50, tol = 1e-3, type ="ball")
source('C:/Users/bpames/github/FZVD/R/penzda.R')
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=50, tol = 1e-3, type ="ball")
source('C:/Users/bpames/github/FZVD/R/penzda.R')
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=50, tol = 1e-3, type ="ball")
source('C:/Users/bpames/github/FZVD/R/penzda.R')
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=50, tol = 1e-3, type ="ball")
source('C:/Users/bpames/github/FZVD/R/penzda.R')
cmns <- penzda(Xt = Xtrain, Yt = Ytrain, maxits=50, tol = 1e-3, type ="ball")
cmns$DVs
plot(cmns$DVs[,1], type="l")
penstats <- predict(obj = cmns, Xtest = Xtest, Ytest = Ytest)
penstats$mc
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
source('C:/Users/bpames/github/FZVD/R/penzda.R')
